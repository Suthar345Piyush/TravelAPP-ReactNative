import { ActivityIndicator, Alert, KeyboardAvoidingView, Platform, ScrollView, Text, TextInput, TouchableOpacity, View } from 'react-native'
import React , {useState} from 'react'
import { RouteProp, useNavigation, useRoute } from '@react-navigation/native'
import { HomeStackParamList } from './HomeScreen'
import { useUser } from '@clerk/clerk-expo'
import {Ionicons} from "@expo/vector-icons";
import axios from 'axios'


const suggestions = [ 
   "Best places tp eat in",
   "3 day itinerary to",
   "Top attractions in",
];


const AIChatScreen = () => {
   const route = useRoute<RouteProp<HomeStackParamList , "AIChat">>();
   const  {location} = route.params;
   const navigation = useNavigation();
   const {user} = useUser();

   const [messages , setMessages] = useState<{
      from : "user" | "ai",
      text : string;
   }[]>([]);

   const [input , setInput] = useState("");
   const [loading , setLoading] = useState(false);

   const askAI = async(query : string) => {
      setMessages((prev) => [...prev , {from : "user" , text : query}]);
      setInput("");
      setLoading(true);


      try{
         const res = await axios.post(
           "", 
           {
             model : "",
             messages : [
               {
                 role : "system",
                 content : `You are a travel assitant for ${location}`,
               },
               {role : "user" , content : query},
             ],
           },

           {
            headers : {
               Authorization : `Bearer token`,
               "Content-Type" : "application/json",
            },
           }
         );


         const reply = res.data.choices[0].message.content;
         setMessages((prev) => [...prev , {from : "ai" , text : reply}]);
      } catch(error){
         console.log(error);
         setMessages((prev) => [
           ...prev,
           {from : "ai" , text : "Sorry , I coldn't fetch a response"},
         ]);
      }  finally {
         setLoading(false);
      }
   };



   const sendEmail = async (message : string) => {
     const email = user?.primaryEmailAddress?.emailAddress;
     
     if(!email){
        Alert.alert("Error" , "User email not found. Please ensure you're logged in");
        return;
     }

     Alert.alert(
       "Send to Email",
       `Do you want to send this response to ${email}`,
       [
        {
           text : "Cancel" , style : "cancel"
        },
        {
          text : "Send",
          onPress : async () => {
             try {
               const response = await axios.post(
                 "",
                 {
                   email,
                   subject : `Travel Assitant Response for ${location}`,
                   message,
                 }
               );
               Alert.alert("Success" , response.data.message);
             } catch(error : any){
              console.error("Error sending email:", error);
              Alert.alert(
                "Error",
                error.response?.data?.error || "Failed to send email",
            );
          }
        }
      }
    ]
  );
};

   return (
  
      <View className="flex-1 bg-white pt-12 px-4">
         <View className="flex-row items-center mb-4">
          <TouchableOpacity onPress={() => navigation.goBack()}>
            <Ionicons name="arrow-back" size={24} color="black"/>
          </TouchableOpacity>

          <Text className="ml-4 text-lg font-semibold">AI Assitant</Text>           
         </View>


      {/* information banner  */}

         <View className="bg-orange-100 p-3 rounded-md mb-2">
           <Text className="text-sm text-orange=600 font-medium">4 Messages are left. <Text className="underline">Get More</Text></Text>
         </View>




         <View className="bg-blue=50 p-3 rounded-md mb-4">
             <Text className="text-sm text-blue-600">The AI Assistant is purely informational. It does not have edit access to your trip plan.</Text>
             <Text className="text-sm text-blue-600 mt-1">Information generated by AI Assitant may not be fully accurate.</Text>
         </View>



          {/* suggestions  */}
       
       <View className="mb-4">
         <Text className="font-semibold mb-2">Don't know what to ask? Here are some suggestions:</Text>


         <View className="flex-row flex-wrap gap-2">
              {suggestions.map((q , index) => (
                 <TouchableOpacity key={index} onPress={() => askAI(`${q} ${location}`)} className="bg-gray-100 px-4 py-2 rounded-full mb-2">
                    <Text className='text-sm text-gray-800'>
                      {q} {location}
                    </Text>
                 </TouchableOpacity>
              ))}
         </View>
       </View>


       {/* chat messages  */}

       <ScrollView>
         {messages.map((msg , index) => (
           <View key={index} className="mb-3">
             <View className={`p-3 rounded-lg ${
               msg.from === 'user' ? "bg-gray-100 self-end" : "bg-orange-50 self-start"
             }`}>

              <Text>
                {msg.text}
              </Text>
              </View>

              {msg.from === "ai" && (
                  <TouchableOpacity onPress={() => sendEmail(msg.text)} className="self-start mt-1">
               <Ionicons name="mail" size={20} color="#007AFF"/>
                  </TouchableOpacity>
              )}
           </View>
         ))}

         {
          loading && (
             <View className="bg-orange-50 self-start p-3 rounded-lg mb-3">
               <ActivityIndicator size="small" color="orange"/>
             </View>
          )}
       </ScrollView>


       {/* input box  */}

       <KeyboardAvoidingView behavior={Platform.OS === "android" ? "padding" : undefined} keyboardVerticalOffset={80}>
         

         <View className="flex-row items-center border rounded-full px-4 py-2 mb-4 bg-gray-50">
            <TextInput className='flex-1 text-sm' placeholder='Ask me travel related questions'
             value={input} onChangeText={setInput}/>

             <TouchableOpacity onPress={() => askAI(input)} disabled={!input.trim()}>

              <Ionicons name="arrow-forward" size={24} color="black"/>
             </TouchableOpacity>
         </View>
       </KeyboardAvoidingView>
      </View>
   );
};


export default AIChatScreen;




